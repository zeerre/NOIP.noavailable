//*************************************************************************
//* File Name: power.cpp
//* Author:GeekBear
//* Mail:zeerre98988@gmail.com 
//* Created And Modified Time: ====2022-01-10  11-00-29====
//*************************************************************************

#include<cstdio>
using namespace std;
int n;
void power_nor(int x){
	if(n!=0){
		int p=1,q=0;
		printf("2");
		//每一次搜索都要输出2 
		//如果是1次幂就没必要写2(1)，后面会说; 
		while(x>=p){
			++q; 
			p*=2;	
		}
		--q;                //计算幂，由于这里会多算一次，看while()条件语句；
                            //x>=p,当p>x时，已经找到了所要的幂，所以计数器q-1; 
		if(q==0 || q==2)    //当幂为1时，省略，形如2，而不应该是2(1).
            printf("(%d)",q);
		//各种括号的判断
        if(q>=3){
			printf("(");    //左括号
			power_nor(q);   //继续递归计算幂，直到幂小于等于2。
			printf(")");    //右括号
		}
		x-=p/2;             //上面计数器就是多算了一次，因此p也多乘了一个2; 

		if(x){              //继续进行x-2^q部分幂的查找；
                            //直到输入的数x最后分解成0，结束，因此与前面的；
                            //输出进行加，因此输出"+"; 
			printf("+");
            power_nor(x);   //最后部分的幂查找。
		}
	}
}                           //此程式对数据的规模解决有限，即使数据类型开成
                            //long long，因此采用高精会较好的满足不同数据规模
                            //。。。
int main(){
	scanf("%d",&n);
	power_nor(n);
    	printf("\n");
	return 0;
}
